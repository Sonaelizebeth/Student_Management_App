@* The Razor component to delete student *@

@page "/delete/{Id}"
@inject IStudentService StudentService
@inject IDepartmentService DepartmentService
@inject NavigationManager NavigationManager

<PageTitle>Delete Student</PageTitle>
<h3>DeleteStudent</h3>
<hr />
@if(obj!=null){
<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="Id" class="control-label">Student Id</label>
                <label>@obj.Id</label> 
            </div>
            <div class="form-group">
                <label for="Name" class="control-label">Name</label>
                <label>@obj.Name</label> 
            </div>
            <div class="form-group">
                <label for="Branch" class="control-label">Department</label>
                @if(obj.Department!=null){
                    <label>@obj.Department.DeptName</label>
                }
                else{
                    <label>Department not found</label>
                }
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@DeleteStudentRecord" value="Delete Student" />
                <input type="button" class="btn btn-danger" @onclick = "Discard" value="Discard" />
            </div>
        </div>
    </div>
</form>
}
else{
    <div class="spinner">

    </div>
}

@code{

    [Parameter]
    public string Id{get; set;}
    int studentId;  
    Student obj = new Student();

    protected override async Task OnInitializedAsync()
    {
        if(int.TryParse(Id,out studentId)){
            obj = await StudentService.GetStudentById(studentId);
           
        }
        else{
            NavigationManager.NavigateTo("/error");
        }
        
    }
    protected async void DeleteStudentRecord()
    {
        if(int.TryParse(Id,out studentId)){
           await StudentService.DeleteStudent(studentId);
            NavigationManager.NavigateTo("Student");
        }
        else{
            NavigationManager.NavigateTo("/error");
        }  
    }
    protected async void Discard()
    {
        NavigationManager.NavigateTo("Student");
    }
}
