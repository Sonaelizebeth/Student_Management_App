@* The Razor component to update Department *@

@page "/updatedept/{DeptId}"
@inject IStudentService StudentService
@inject IDepartmentService DepartmentService
@inject NavigationManager NavigationManager

<h3> Edit Department Details</h3>
<hr />

<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="Id" class="control-lablel">Department Id</label>
                <input form = "Id" class="form-control" @bind="obj.DeptId" disabled/>
            </div>
            <div class="form-group">
                <label for="Name" class="control-lablel">Department Name</label>
                <input form = "Name" class="form-control" @bind="obj.DeptName"/>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@UpdateDepartments" value="Update Department" />
                <input type="button" class="btn btn-danger" @onclick = "@Discard" value="Discard" />
            </div>
        </div>
    </div>
</form>


@code{

    [Parameter]
    public string DeptId{get; set;}
    int DeptId1;
    Department obj = new Department();

    protected async override void OnParametersSet()
    {
        if(int.TryParse(DeptId,out DeptId1)){
            obj= await DepartmentService.GetDepartmentById(DeptId1);
            if(obj==null){
                NavigationManager.NavigateTo("/error");
            }
        }
        else{
            NavigationManager.NavigateTo("/error");
        }    
    }
    protected async Task UpdateDepartments()
    {
        await DepartmentService.UpdateDepartment(obj);
        NavigationManager.NavigateTo("Department");
    }
    protected async void Discard()
    {
        NavigationManager.NavigateTo("Department");
    }
}